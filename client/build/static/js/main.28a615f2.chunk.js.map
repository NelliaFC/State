{"version":3,"sources":["assets/spinner.gif","utils/reducers.js","utils/actions.js","utils/store.js","utils/helpers.js","components/ProductItem/index.js","utils/queries.js","components/ProductList/index.js","components/CategoryMenu/index.js","components/CartItem/index.js","utils/auth.js","components/Cart/index.js","pages/Home.js","pages/Detail.js","components/Jumbotron/index.js","pages/NoMatch.js","utils/mutations.js","pages/Login.js","pages/Signup.js","components/Nav/index.js","pages/OrderHistory.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","initialState","products","categories","currentCategory","cart","cartOpen","reducers","state","action","type","product","map","_id","purchaseQuantity","newState","filter","length","createStore","idbPromise","storeName","method","object","Promise","resolve","reject","db","tx","store","request","window","indexedDB","open","onupgradeneeded","e","result","createObjectStore","keyPath","onerror","console","log","onsuccess","transaction","objectStore","put","all","getAll","delete","oncomplete","close","ProductItem","item","dispatch","useDispatch","useSelector","image","name","price","quantity","className","to","alt","src","count","pluralize","onClick","itemInCart","find","cartItem","parseInt","QUERY_PRODUCTS","gql","QUERY_CHECKOUT","QUERY_CATEGORIES","QUERY_USER","ProductList","useQuery","loading","data","useEffect","forEach","then","category","key","spinner","CategoryMenu","setCategory","categoryData","id","CartItem","placeholder","value","onChange","target","role","aria-label","removeFromCart","decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","location","assign","removeItem","stripePromise","loadStripe","Cart","useLazyQuery","getCheckout","toggleCart","res","redirectToCheckout","sessionId","checkout","session","a","getCart","sum","toFixed","calculateTotal","Auth","loggedIn","productIds","i","push","variables","Home","useState","Detail","useParams","currentProduct","setCurrentProduct","indexedProducts","description","Jumbotron","children","style","height","clear","paddingTop","textAlign","NoMatch","LOGIN","ADD_USER","Login","props","email","password","formState","setFormState","useMutation","login","error","handleFormSubmit","event","preventDefault","mutationResponse","handleChange","onSubmit","htmlFor","Signup","addUser","firstName","lastName","Nav","href","logout","OrderHistory","user","orders","order","purchaseDate","toLocaleDateString","index","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","App","ApolloProvider","exact","path","component","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.28a615f2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spinner.ab497855.gif\";","import {\r\n    UPDATE_PRODUCTS,\r\n    ADD_TO_CART,\r\n    UPDATE_CART_QUANTITY,\r\n    REMOVE_FROM_CART,\r\n    ADD_MULTIPLE_TO_CART,\r\n    UPDATE_CATEGORIES,\r\n    UPDATE_CURRENT_CATEGORY,\r\n    CLEAR_CART,\r\n    TOGGLE_CART\r\n  } from \"./actions\";\r\n  const initialState = {\r\n    products: [],\r\n    categories: [],\r\n    currentCategory: '',\r\n    cart: [],\r\n    cartOpen: false\r\n  };\r\n  export const reducers = (state = initialState, action) => {\r\n    switch (action.type) {\r\n      case UPDATE_PRODUCTS:\r\n        return {\r\n          ...state,\r\n          products: [...action.products],\r\n        };\r\n      case ADD_TO_CART:\r\n        return {\r\n          ...state,\r\n          cartOpen: true,\r\n          cart: [...state.cart, action.product],\r\n        };\r\n      case ADD_MULTIPLE_TO_CART:\r\n        return {\r\n          ...state,\r\n          cart: [...state.cart, ...action.products],\r\n        };\r\n      case UPDATE_CART_QUANTITY:\r\n        return {\r\n          ...state,\r\n          cartOpen: true,\r\n          cart: state.cart.map(product => {\r\n            if (action._id === product._id) {\r\n              product.purchaseQuantity = action.purchaseQuantity\r\n            }\r\n            return product\r\n          })\r\n        };\r\n      case REMOVE_FROM_CART:\r\n        let newState = state.cart.filter(product => {\r\n          return product._id !== action._id;\r\n        });\r\n        return {\r\n          ...state,\r\n          cartOpen: newState.length > 0,\r\n          cart: newState\r\n        };\r\n      case CLEAR_CART:\r\n        return {\r\n          ...state,\r\n          cartOpen: false,\r\n          cart: []\r\n        };\r\n      case TOGGLE_CART:\r\n        return {\r\n          ...state,\r\n          cartOpen: !state.cartOpen\r\n        };\r\n      case UPDATE_CATEGORIES:\r\n        return {\r\n          ...state,\r\n          categories: [...action.categories],\r\n        };\r\n      case UPDATE_CURRENT_CATEGORY:\r\n        return {\r\n          ...state,\r\n          currentCategory: action.currentCategory\r\n        }\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n  export default reducers;","export const UPDATE_PRODUCTS = \"UPDATE_PRODUCTS\";\r\nexport const ADD_TO_CART = \"ADD_TO_CART\";\r\nexport const ADD_MULTIPLE_TO_CART = \"ADD_MULTIPLE_TO_CART\";\r\nexport const REMOVE_FROM_CART = \"REMOVE_FROM_CART\";\r\nexport const CLEAR_CART = \"CLEAR_CART\";\r\nexport const UPDATE_CART_QUANTITY = \"UPDATE_CART_QUANTITY\";\r\nexport const TOGGLE_CART = \"TOGGLE_CART\";\r\nexport const UPDATE_CATEGORIES = \"UPDATE_CATEGORIES\";\r\nexport const UPDATE_CURRENT_CATEGORY = \"UPDATE_CURRENT_CATEGORY\";","import {createStore} from 'redux'\r\nimport {reducers} from './reducers'\r\nexport default createStore(reducers)\r\n\r\n","export function pluralize(name, count) {\n  if (count === 1) {\n    return name\n  }\n  return name + 's'\n}\n\nexport function idbPromise(storeName, method, object) {\n  return new Promise((resolve, reject) => {\n    const request = window.indexedDB.open('shop-shop', 1);\n    let db, tx, store;\n    request.onupgradeneeded = function(e) {\n      const db = request.result;\n      db.createObjectStore('products', { keyPath: '_id' });\n      db.createObjectStore('categories', { keyPath: '_id' });\n      db.createObjectStore('cart', { keyPath: '_id' });\n    };\n    request.onerror = function(e) {\n      console.log('There was an error');\n    };\n    request.onsuccess = function(e) {\n      db = request.result;\n      tx = db.transaction(storeName, 'readwrite');\n      store = tx.objectStore(storeName);\n      db.onerror = function(e) {\n        console.log('error', e);\n      };\n      switch (method) {\n        case 'put':\n          store.put(object);\n          resolve(object);\n          break;\n        case 'get':\n          const all = store.getAll();\n          all.onsuccess = function() {\n            resolve(all.result);\n          };\n          break;\n        case 'delete':\n          store.delete(object._id);\n          break;\n        default:\n          console.log('No valid method');\n          break;\n      }\n      tx.oncomplete = function() {\n        db.close();\n      };\n    };\n  });\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { pluralize } from '../../utils/helpers';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ADD_TO_CART, UPDATE_CART_QUANTITY } from '../../utils/actions';\nimport { idbPromise } from '../../utils/helpers';\n\nfunction ProductItem(item) {\n  const dispatch = useDispatch();\n  const state = useSelector((state) => state);\n  const { image, name, _id, price, quantity } = item;\n  const { cart } = state;\n  const addToCart = () => {\n    const itemInCart = cart.find((cartItem) => cartItem._id === _id);\n    if (itemInCart) {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: _id,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n      });\n      idbPromise('cart', 'put', {\n        ...itemInCart,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n      });\n    } else {\n      dispatch({\n        type: ADD_TO_CART,\n        product: { ...item, purchaseQuantity: 1 },\n      });\n      idbPromise('cart', 'put', { ...item, purchaseQuantity: 1 });\n    }\n  };\n\n  return (\n    <div className=\"card px-1 py-1\">\n      <Link to={`/products/${_id}`}>\n        <img\n          alt={name}\n          src={`/images/${image}`}\n        />\n        <p>{name}</p>\n      </Link>\n      <div>\n        <div>{quantity} {pluralize(\"item\", quantity)} in stock</div>\n        <span>${price}</span>\n      </div>\n      <button onClick={addToCart}>Add to cart</button>\n    </div>\n  );\n}\n\nexport default ProductItem;\n","import { gql } from '@apollo/client';\n\nexport const QUERY_PRODUCTS = gql`\n  query getProducts($category: ID) {\n    products(category: $category) {\n      _id\n      name\n      description\n      price\n      quantity\n      image\n      category {\n        _id\n      }\n    }\n  }\n`;\nexport const QUERY_CHECKOUT = gql`\n  query getCheckout($products: [ID]!) {\n    checkout(products: $products) {\n      session\n    }\n  }\n`;\nexport const QUERY_ALL_PRODUCTS = gql`\n  {\n    products {\n      _id\n      name\n      description\n      price\n      quantity\n      category {\n        name\n      }\n    }\n  }\n`;\n\nexport const QUERY_CATEGORIES = gql`\n  {\n    categories {\n      _id\n      name\n    }\n  }\n`;\n\nexport const QUERY_USER = gql`\n  {\n    user {\n      firstName\n      lastName\n      orders {\n        _id\n        purchaseDate\n        products {\n          _id\n          name\n          description\n          price\n          quantity\n          image\n        }\n      }\n    }\n  }\n`;\n","import React, { useEffect } from 'react';\nimport ProductItem from '../ProductItem';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { UPDATE_PRODUCTS } from '../../utils/actions';\nimport { useQuery } from '@apollo/client';\nimport { QUERY_PRODUCTS } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\nimport spinner from '../../assets/spinner.gif';\n\nfunction ProductList() {\n\n    const dispatch = useDispatch();\n  const state = useSelector((state) => state);\n  const { currentCategory } = state;\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\n  useEffect(() => {\n    if (data) {\n      dispatch({\n        type: UPDATE_PRODUCTS,\n        products: data.products,\n      });\n      data.products.forEach((product) => {\n        idbPromise('products', 'put', product);\n      });\n    } else if (!loading) {\n      idbPromise('products', 'get').then((products) => {\n        dispatch({\n          type: UPDATE_PRODUCTS,\n          products: products,\n        });\n      });\n    }\n  }, [data, loading, dispatch]);\n  function filterProducts() {\n    if (!currentCategory) {\n      return state.products;\n    }\n    return state.products.filter(\n      (product) => product.category._id === currentCategory\n    );\n  }\n\n  return (\n    <div className=\"my-2\">\n      <h2>Our Products:</h2>\n      {state.products.length ? (\n        <div className=\"flex-row\">\n          {filterProducts().map((product) => (\n            <ProductItem\n              key={product._id}\n              _id={product._id}\n              image={product.image}\n              name={product.name}\n              price={product.price}\n              quantity={product.quantity}\n            />\n          ))}\n        </div>\n      ) : (\n        <h3>You haven't added any products yet!</h3>\n      )}\n      {loading ? <img src={spinner} alt=\"loading\" /> : null}\n    </div>\n  );\n}\n\nexport default ProductList;\n","import React, { useEffect } from 'react';\nimport { useQuery } from '@apollo/client';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  UPDATE_CATEGORIES,\n  UPDATE_CURRENT_CATEGORY,\n} from '../../utils/actions';\nimport { QUERY_CATEGORIES } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\n\nfunction CategoryMenu({ setCategory }) {\n  const dispatch = useDispatch();\n  const state = useSelector((state) => state);\n  const { categories } = state;\n  const { loading, data: categoryData } = useQuery(QUERY_CATEGORIES);\n  useEffect(() => {\n    if (categoryData) {\n      dispatch({\n        type: UPDATE_CATEGORIES,\n        categories: categoryData.categories,\n      });\n      categoryData.categories.forEach((category) => {\n        idbPromise('categories', 'put', category);\n      });\n    } else if (!loading) {\n      idbPromise('categories', 'get').then((categories) => {\n        dispatch({\n          type: UPDATE_CATEGORIES,\n          categories: categories,\n        });\n      });\n    }\n  }, [categoryData, loading, dispatch]);\n  const handleClick = (id) => {\n    dispatch({\n      type: UPDATE_CURRENT_CATEGORY,\n      currentCategory: id,\n    });\n  };\n  return (\n    <div>\n      <h2>Choose a Category:</h2>\n      {categories.map((item) => (\n        <button\n          key={item._id}\n          onClick={() => {\n            handleClick(item._id);\n          }}\n        >\n          {item.name}\n        </button>\n      ))}\n    </div>\n  );\n}\n\nexport default CategoryMenu;\n","\r\n  import React from 'react';\r\n  import { useDispatch } from 'react-redux';\r\n  import { REMOVE_FROM_CART, UPDATE_CART_QUANTITY } from \"../../utils/actions\";\r\n  import { idbPromise } from \"../../utils/helpers\";\r\n  const CartItem = ({ item }) => {\r\n    const dispatch = useDispatch();\r\n    const removeFromCart = item => {\r\n      dispatch({\r\n        type: REMOVE_FROM_CART,\r\n        _id: item._id\r\n      });\r\n      idbPromise('cart', 'delete', { ...item });\r\n    };\r\n    const onChange = (e) => {\r\n      const value = e.target.value;\r\n      if (value === '0') {\r\n        dispatch({\r\n          type: REMOVE_FROM_CART,\r\n          _id: item._id\r\n        });\r\n        idbPromise('cart', 'delete', { ...item });\r\n      } else {\r\n        dispatch({\r\n          type: UPDATE_CART_QUANTITY,\r\n          _id: item._id,\r\n          purchaseQuantity: parseInt(value)\r\n        });\r\n        idbPromise('cart', 'put', { ...item, purchaseQuantity: parseInt(value) });\r\n      }\r\n    }\r\n    return (\r\n      <div className=\"flex-row\">\r\n        <div>\r\n          <img\r\n            src={`/images/${item.image}`}\r\n            alt=\"\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <div>{item.name}, ${item.price}</div>\r\n          <div>\r\n            <span>Qty:</span>\r\n            <input\r\n              type=\"number\"\r\n              placeholder=\"1\"\r\n              value={item.purchaseQuantity}\r\n              onChange={onChange}\r\n            />\r\n            <span\r\n              role=\"img\"\r\n              aria-label=\"trash\"\r\n              onClick={() => removeFromCart(item)}\r\n            >\r\n              :wastebasket:\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  export default CartItem;","import decode from 'jwt-decode';\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    // Checks if there is a saved token and it's still valid\n    const token = this.getToken();\n    return !!token && !this.isTokenExpired(token);\n  }\n\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  getToken() {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    // Saves user token to localStorage\n    localStorage.setItem('id_token', idToken);\n\n    window.location.assign('/');\n  }\n\n  logout() {\n    // Clear user token and profile data from localStorage\n    localStorage.removeItem('id_token');\n    // this will reload the page and reset the state of the application\n    window.location.assign('/');\n  }\n}\n\nexport default new AuthService();\n","import React, { useEffect } from 'react';\r\nimport { loadStripe } from '@stripe/stripe-js';\r\nimport { useLazyQuery } from '@apollo/client';\r\nimport { QUERY_CHECKOUT } from '../../utils/queries';\r\nimport { idbPromise } from '../../utils/helpers';\r\nimport CartItem from '../CartItem';\r\nimport Auth from '../../utils/auth';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { TOGGLE_CART, ADD_MULTIPLE_TO_CART } from '../../utils/actions';\r\nimport './style.css';\r\nconst stripePromise = loadStripe('pk_test_TYooMQauvdEDq54NiTphI7jx');\r\nconst Cart = () => {\r\n  const dispatch = useDispatch();\r\n  const state = useSelector((state) => state);\r\n  const [getCheckout, { data }] = useLazyQuery(QUERY_CHECKOUT);\r\n  useEffect(() => {\r\n    if (data) {\r\n      stripePromise.then((res) => {\r\n        res.redirectToCheckout({ sessionId: data.checkout.session });\r\n      });\r\n    }\r\n  }, [data]);\r\n  useEffect(() => {\r\n    async function getCart() {\r\n      const cart = await idbPromise('cart', 'get');\r\n      dispatch({ type: ADD_MULTIPLE_TO_CART, products: [...cart] });\r\n    }\r\n    if (!state.cart.length) {\r\n      getCart();\r\n    }\r\n  }, [state.cart.length, dispatch]);\r\n  function toggleCart() {\r\n    dispatch({ type: TOGGLE_CART });\r\n  }\r\n  function calculateTotal() {\r\n    let sum = 0;\r\n    state.cart.forEach((item) => {\r\n      sum += item.price * item.purchaseQuantity;\r\n    });\r\n    return sum.toFixed(2);\r\n  }\r\n  function submitCheckout() {\r\n    const productIds = [];\r\n    state.cart.forEach((item) => {\r\n      for (let i = 0; i < item.purchaseQuantity; i++) {\r\n        productIds.push(item._id);\r\n      }\r\n    });\r\n    getCheckout({\r\n      variables: { products: productIds },\r\n    });\r\n  }\r\n  if (!state.cartOpen) {\r\n    return (\r\n      <div className=\"cart-closed\" onClick={toggleCart}>\r\n        <span role=\"img\" aria-label=\"trash\">\r\n          :shopping_trolley:\r\n        </span>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div className=\"cart\">\r\n      <div className=\"close\" onClick={toggleCart}>\r\n        [close]\r\n      </div>\r\n      <h2>Shopping Cart</h2>\r\n      {state.cart.length ? (\r\n        <div>\r\n          {state.cart.map((item) => (\r\n            <CartItem key={item._id} item={item} />\r\n          ))}\r\n          <div className=\"flex-row space-between\">\r\n            <strong>Total: ${calculateTotal()}</strong>\r\n            {Auth.loggedIn() ? (\r\n              <button onClick={submitCheckout}>Checkout</button>\r\n            ) : (\r\n              <span>(log in to check out)</span>\r\n            )}\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <h3>\r\n          <span role=\"img\" aria-label=\"shocked\">\r\n            :scream:\r\n          </span>\r\n          You haven't added anything to your cart yet!\r\n        </h3>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default Cart;","import React, { useState } from \"react\";\nimport ProductList from \"../components/ProductList\";\nimport CategoryMenu from \"../components/CategoryMenu\";\nimport Cart from '../components/Cart'\n\nconst Home = () => {\n  const [currentCategory, setCategory] = useState(\"\");\n\n  return (\n    <div className=\"container\">\n      <CategoryMenu setCategory={setCategory} />\n      <ProductList currentCategory={currentCategory} />\n      <Cart></Cart>\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Cart from '../components/Cart';\nimport {\n  REMOVE_FROM_CART,\n  UPDATE_CART_QUANTITY,\n  ADD_TO_CART,\n  UPDATE_PRODUCTS,\n} from '../utils/actions';\nimport { QUERY_PRODUCTS } from '../utils/queries';\nimport { idbPromise } from '../utils/helpers';\nimport spinner from '../assets/spinner.gif';\n\nfunction Detail() {\n  const dispatch = useDispatch();\n  const state = useSelector((state) => state);\n  const { id } = useParams();\n  const [currentProduct, setCurrentProduct] = useState({});\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\n  const { products, cart } = state;\n  useEffect(() => {\n    // already in global store\n    if (products.length) {\n      setCurrentProduct(products.find((product) => product._id === id));\n    }\n    // retrieved from server\n    else if (data) {\n      dispatch({\n        type: UPDATE_PRODUCTS,\n        products: data.products,\n      });\n      data.products.forEach((product) => {\n        idbPromise('products', 'put', product);\n      });\n    }\n    // get cache from idb\n    else if (!loading) {\n      idbPromise('products', 'get').then((indexedProducts) => {\n        dispatch({\n          type: UPDATE_PRODUCTS,\n          products: indexedProducts,\n        });\n      });\n    }\n  }, [products, data, loading, dispatch, id]);\n  const addToCart = () => {\n    const itemInCart = cart.find((cartItem) => cartItem._id === id);\n    if (itemInCart) {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: id,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n      });\n      idbPromise('cart', 'put', {\n        ...itemInCart,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n      });\n    } else {\n      dispatch({\n        type: ADD_TO_CART,\n        product: { ...currentProduct, purchaseQuantity: 1 },\n      });\n      idbPromise('cart', 'put', { ...currentProduct, purchaseQuantity: 1 });\n    }\n  };\n  const removeFromCart = () => {\n    dispatch({\n      type: REMOVE_FROM_CART,\n      _id: currentProduct._id,\n    });\n    idbPromise('cart', 'delete', { ...currentProduct });\n  };\n\n  return (\n    <>\n      {currentProduct ? (\n        <div className=\"container my-1\">\n          <Link to=\"/\">← Back to Products</Link>\n\n          <h2>{currentProduct.name}</h2>\n\n          <p>{currentProduct.description}</p>\n\n          <p>\n            <strong>Price:</strong>${currentProduct.price}{' '}\n            <button onClick={addToCart}>Add to Cart</button>\n            <button onClick={removeFromCart}>Remove from Cart</button>\n          </p>\n\n          <img\n            src={`/images/${currentProduct.image}`}\n            alt={currentProduct.name}\n          />\n        </div>\n      ) : null}\n      {loading ? <img src={spinner} alt=\"loading\" /> : null}\n     <Cart></Cart>\n    </>\n  );\n}\n\nexport default Detail;\n","import React from \"react\";\n\nfunction Jumbotron({ children }) {\n  return (\n    <div\n      style={{ height: 560, clear: \"both\", paddingTop: 120, textAlign: \"center\" }}\n    >\n      {children}\n    </div>\n  );\n}\n\nexport default Jumbotron;\n","import React from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\n\nconst NoMatch = () => {\n  return (\n    <div>\n      <Jumbotron>\n        <h1>404 Page Not Found</h1>\n        <h1>\n          <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\n            🙄\n          </span>\n        </h1>\n      </Jumbotron>\n    </div>\n  );\n};\n\nexport default NoMatch;\n","import { gql } from '@apollo/client';\n\nexport const LOGIN = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n\nexport const ADD_ORDER = gql`\n  mutation addOrder($products: [ID]!) {\n    addOrder(products: $products) {\n      purchaseDate\n      products {\n        _id\n        name\n        description\n        price\n        quantity\n        category {\n          name\n        }\n      }\n    }\n  }\n`;\n\nexport const ADD_USER = gql`\n  mutation addUser(\n    $firstName: String!\n    $lastName: String!\n    $email: String!\n    $password: String!\n  ) {\n    addUser(\n      firstName: $firstName\n      lastName: $lastName\n      email: $email\n      password: $password\n    ) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n","import React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { Link } from 'react-router-dom';\nimport { LOGIN } from '../utils/mutations';\nimport Auth from '../utils/auth';\n\nfunction Login(props) {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [login, { error }] = useMutation(LOGIN);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      const mutationResponse = await login({\n        variables: { email: formState.email, password: formState.password },\n      });\n      const token = mutationResponse.data.login.token;\n      Auth.login(token);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <div className=\"container my-1\">\n      <Link to=\"/signup\">← Go to Signup</Link>\n\n      <h2>Login</h2>\n      <form onSubmit={handleFormSubmit}>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"email\">Email address:</label>\n          <input\n            placeholder=\"youremail@test.com\"\n            name=\"email\"\n            type=\"email\"\n            id=\"email\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"pwd\">Password:</label>\n          <input\n            placeholder=\"******\"\n            name=\"password\"\n            type=\"password\"\n            id=\"pwd\"\n            onChange={handleChange}\n          />\n        </div>\n        {error ? (\n          <div>\n            <p className=\"error-text\">The provided credentials are incorrect</p>\n          </div>\n        ) : null}\n        <div className=\"flex-row flex-end\">\n          <button type=\"submit\">Submit</button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Login;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\nimport Auth from '../utils/auth';\nimport { ADD_USER } from '../utils/mutations';\n\nfunction Signup(props) {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [addUser] = useMutation(ADD_USER);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    const mutationResponse = await addUser({\n      variables: {\n        email: formState.email,\n        password: formState.password,\n        firstName: formState.firstName,\n        lastName: formState.lastName,\n      },\n    });\n    const token = mutationResponse.data.addUser.token;\n    Auth.login(token);\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <div className=\"container my-1\">\n      <Link to=\"/login\">← Go to Login</Link>\n\n      <h2>Signup</h2>\n      <form onSubmit={handleFormSubmit}>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"firstName\">First Name:</label>\n          <input\n            placeholder=\"First\"\n            name=\"firstName\"\n            type=\"firstName\"\n            id=\"firstName\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"lastName\">Last Name:</label>\n          <input\n            placeholder=\"Last\"\n            name=\"lastName\"\n            type=\"lastName\"\n            id=\"lastName\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"email\">Email:</label>\n          <input\n            placeholder=\"youremail@test.com\"\n            name=\"email\"\n            type=\"email\"\n            id=\"email\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"pwd\">Password:</label>\n          <input\n            placeholder=\"******\"\n            name=\"password\"\n            type=\"password\"\n            id=\"pwd\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row flex-end\">\n          <button type=\"submit\">Submit</button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Signup;\n","import React from \"react\";\nimport Auth from \"../../utils/auth\";\nimport { Link } from \"react-router-dom\";\n\nfunction Nav() {\n\n  function showNavigation() {\n    if (Auth.loggedIn()) {\n      return (\n        <ul className=\"flex-row\">\n          <li className=\"mx-1\">\n            <Link to=\"/orderHistory\">\n              Order History\n            </Link>\n          </li>\n          <li className=\"mx-1\">\n            {/* this is not using the Link component to logout or user and then refresh the application to the start */}\n            <a href=\"/\" onClick={() => Auth.logout()}>\n              Logout\n            </a>\n          </li>\n        </ul>\n      );\n    } else {\n      return (\n        <ul className=\"flex-row\">\n          <li className=\"mx-1\">\n            <Link to=\"/signup\">\n              Signup\n            </Link>\n          </li>\n          <li className=\"mx-1\">\n            <Link to=\"/login\">\n              Login\n            </Link>\n          </li>\n        </ul>\n      );\n    }\n  }\n\n  return (\n    <header className=\"flex-row px-1\">\n      <h1>\n        <Link to=\"/\">\n          <span role=\"img\" aria-label=\"shopping bag\">🛍️</span>\n          -Shop-Shop\n        </Link>\n      </h1>\n\n      <nav>\n        {showNavigation()}\n      </nav>\n    </header>\n  );\n}\n\nexport default Nav;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { useQuery } from '@apollo/client';\nimport { QUERY_USER } from '../utils/queries';\n\nfunction OrderHistory() {\n  const { data } = useQuery(QUERY_USER);\n  let user;\n\n  if (data) {\n    user = data.user;\n  }\n\n  return (\n    <>\n      <div className=\"container my-1\">\n        <Link to=\"/\">← Back to Products</Link>\n\n        {user ? (\n          <>\n            <h2>\n              Order History for {user.firstName} {user.lastName}\n            </h2>\n            {user.orders.map((order) => (\n              <div key={order._id} className=\"my-2\">\n                <h3>\n                  {new Date(parseInt(order.purchaseDate)).toLocaleDateString()}\n                </h3>\n                <div className=\"flex-row\">\n                  {order.products.map(({ _id, image, name, price }, index) => (\n                    <div key={index} className=\"card px-1 py-1\">\n                      <Link to={`/products/${_id}`}>\n                        <img alt={name} src={`/images/${image}`} />\n                        <p>{name}</p>\n                      </Link>\n                      <div>\n                        <span>${price}</span>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            ))}\n          </>\n        ) : null}\n      </div>\n    </>\n  );\n}\n\nexport default OrderHistory;\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\nimport {Provider} from 'react-redux';\nimport store from './utils/store.js';\nimport Home from './pages/Home';\nimport Detail from './pages/Detail';\nimport NoMatch from './pages/NoMatch';\nimport Login from './pages/Login';\nimport Signup from './pages/Signup';\nimport Nav from './components/Nav';\nimport OrderHistory from './pages/OrderHistory';\n\nconst httpLink = createHttpLink({\n  uri: '/graphql',\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem('id_token');\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div>\n        <Provider store={store}>\n          <Nav />\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route exact path=\"/login\" component={Login} />\n            <Route exact path=\"/signup\" component={Signup} />\n            <Route exact path=\"/orderHistory\" component={OrderHistory} />\n            <Route exact path=\"/products/:id\" component={Detail} />\n            <Route component={NoMatch} />\n          </Switch>\n          </Provider>\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (\n    process.env.NODE_ENV === 'production' &&\n    'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}